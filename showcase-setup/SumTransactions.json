{
  "metaData" : {
    "id" : "TransactionsSum",
    "additionalFields" : {
      "description" : null,
      "properties" : {
        "parallelism" : "1",
        "spillStateToDisk" : "true",
        "useAsyncInterpretation" : "",
        "checkpointIntervalInSeconds" : ""
      },
      "metaDataType" : "StreamMetaData"
    }
  },
  "nodes" : [
    {
      "id" : "Load transactions from directory",
      "ref" : {
        "typ" : "table",
        "parameters" : [
          {
            "name" : "Table",
            "expression" : {
              "language" : "spel",
              "expression" : "'transactions'"
            }
          }
        ]
      },
      "additionalFields" : {
        "description" : "Transactions are loaded from `transactions-data/transactions` directory in a csv format partitioned by date. This directory is mounted onto the Flink's jobmanager and taskmanger containers.",
        "layoutData" : {
          "x" : 0,
          "y" : 0
        }
      },
      "type" : "Source"
    },
    {
      "id" : "Sum transactions amount per client and day",
      "outputVar" : "aggregated_sum",
      "nodeType" : "aggregate",
      "parameters" : [
        {
          "name" : "groupBy",
          "expression" : {
            "language" : "spel",
            "expression" : "#input.client_id + \";\" + #input.date.toString"
          }
        },
        {
          "name" : "aggregateBy",
          "expression" : {
            "language" : "spel",
            "expression" : "#input.amount"
          }
        },
        {
          "name" : "aggregator",
          "expression" : {
            "language" : "spel",
            "expression" : "'Sum'"
          }
        }
      ],
      "additionalFields" : {
        "description" : "We group the transactions based on client's identifier and day of transaction - the 'groupBy' parameter. Then we calculate the sum (the 'aggregator' parameter) of transaction amounts (the 'aggregateBy' parameter). \n\nThe output of this node is the aggregation result - available downstream under #aggregated_sum variable (the `Output variable name` parameter). The key of each group (the groupBy value) is available under #key variable.",
        "layoutData" : {
          "x" : 0,
          "y" : 150
        }
      },
      "type" : "CustomNode"
    },
    {
      "id" : "Client id",
      "varName" : "client_id",
      "value" : {
        "language" : "spel",
        "expression" : "#key.split(\";\")[0]"
      },
      "additionalFields" : {
        "description" : "We extract the client identifier from the aggregated group key leveraging SpEL operation treating the key as String",
        "layoutData" : {
          "x" : 0,
          "y" : 300
        }
      },
      "type" : "Variable"
    },
    {
      "id" : "Transaction date",
      "varName" : "date",
      "value" : {
        "language" : "spel",
        "expression" : "#key.split(\";\")[1]"
      },
      "additionalFields" : {
        "description" : "We extract the date of aggregated transactions from the group key leveraging SpEL operation treating the key as String",
        "layoutData" : {
          "x" : 0,
          "y" : 450
        }
      },
      "type" : "Variable"
    },
    {
      "id" : "Output transaction group summary to directory",
      "ref" : {
        "typ" : "table",
        "parameters" : [
          {
            "name" : "Table",
            "expression" : {
              "language" : "spel",
              "expression" : "'transactions_summary'"
            }
          },
          {
            "name" : "Value",
            "expression" : {
              "language" : "spel",
              "expression" : "{\n    client_id: #client_id,\n    amount: #aggregated_sum,\n    date: #date\n}"
            }
          }
        ]
      },
      "endResult" : null,
      "isDisabled" : null,
      "additionalFields" : {
        "description" : "Aggregated transaction results are outputted into the `transactions-data/transactions_summary` directory in csv format. ",
        "layoutData" : {
          "x" : 0,
          "y" : 600
        }
      },
      "type" : "Sink"
    }
  ],
  "additionalBranches" : [
  ]
}